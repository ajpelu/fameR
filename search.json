[{"path":"https://ajpelu.github.io/famexploreR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 fameR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ajpelu.github.io/famexploreR/articles/estadillos.html","id":"características-del-formulario-de-campo","dir":"Articles","previous_headings":"","what":"Características del formulario de campo","title":"Estadillos de campo","text":"El formulario de campo proporcionado se denomina ficha_campo.xlsx o ficha_campo.ods. Cada uno de los archivos (formularios de campo) han de nombrarse de una forma conveniente intentando evitar tíldes, carácteres especiales, espacios en blanco, etc. modo de sugerencia, por ejemplo si se toman datos de una población de Aquilegia pyrenaica cazorlensis dentro de un vallado en una determinada localidad y fecha, se podría llamar al archivo 20231101_AQ_BE_F1.xlsx, donde: 20231101 correspondería la fecha. AQ se refiere al código que se emplee para la especie. es el código de la localidad. F1 se refiere al transecto 1 fuera de vallado. Nombrar de forma consistente los ficheros de datos ayuda la consistencia la hora de realizar incorporaciones masivas de datos en posteriores aplicaciones.","code":""},{"path":"https://ajpelu.github.io/famexploreR/articles/estadillos.html","id":"formato-del-formulario-de-campo","dir":"Articles","previous_headings":"","what":"Formato del formulario de campo","title":"Estadillos de campo","text":"El formulario de campo proporcionado se presenta en dos formatos: xlsx: para uso en Microsoft Office ods: para uso en OpenOffice Estos dos formatos son aceptados por la aplicación desarrollada.","code":""},{"path":"https://ajpelu.github.io/famexploreR/articles/estadillos.html","id":"estructura-del-formulario-de-campo","dir":"Articles","previous_headings":"","what":"Estructura del formulario de campo","title":"Estadillos de campo","text":"El formulario de campo contiene diferentes hojas de entrada de datos. En su versión actual consta de las siguientes hojas de entrada de datos: datos_generales, suelo, humedad_temp, excrementos, especie_focal, herbivoria, vecindad, com_veg_cobertura, y com_veg_contactos. Asimismo consta de diferentes diccionarios de datos que se utilizan en las hojas de entrada de datos. Entre ellos tenemos: dicc_taxon, dicc_tratamiento, dicc_vallado, dicc_estado_vallado, y dicc_crs.","code":""},{"path":[]},{"path":"https://ajpelu.github.io/famexploreR/articles/estadillos.html","id":"dicc_taxon","dir":"Articles","previous_headings":"3 Estructura del formulario de campo > 3.1 Diccionario de datos","what":"dicc_taxon","title":"Estadillos de campo","text":"Diccionario de taxones derivado de Lista patrón de las especies silvestres presentes en España, del Ministerio para la Transición Ecológica y el Reto demográfico) (Figura 3.1). Figure 3.1: Diccionario de taxones","code":""},{"path":"https://ajpelu.github.io/famexploreR/articles/estadillos.html","id":"dicc_tratamiento","dir":"Articles","previous_headings":"3 Estructura del formulario de campo > 3.1 Diccionario de datos","what":"dicc_tratamiento","title":"Estadillos de campo","text":"Diccionario de tratamientos para indicar si es dentro de vallado o fuera de vallado. Se pueden incluir nuevos registros este diccionario. Consta de tres campos: id_trat: identificador único tratamiento: código de tratamiento descripción: descripción del tratamiento","code":""},{"path":"https://ajpelu.github.io/famexploreR/articles/estadillos.html","id":"dicc_vallado","dir":"Articles","previous_headings":"3 Estructura del formulario de campo > 3.1 Diccionario de datos","what":"dicc_vallado","title":"Estadillos de campo","text":"Diccionario para describir el tipo de vallado. Se pueden incluir nuevos registros este diccionario. Consta de tres campos: id_vallado: identificador único vallado: código del vallado descripción: descripción del vallado","code":""},{"path":"https://ajpelu.github.io/famexploreR/articles/estadillos.html","id":"dicc_estado_vallado","dir":"Articles","previous_headings":"3 Estructura del formulario de campo > 3.1 Diccionario de datos","what":"dicc_estado_vallado","title":"Estadillos de campo","text":"Diccionario para describir el estado del vallado. Se pueden incluir nuevos registros este diccionario. Consta de tres campos: id_estado_vallado: identificador único estado_vallado: descripción del estado del vallado","code":""},{"path":"https://ajpelu.github.io/famexploreR/articles/estadillos.html","id":"dicc_crs","dir":"Articles","previous_headings":"3 Estructura del formulario de campo > 3.1 Diccionario de datos","what":"dicc_crs","title":"Estadillos de campo","text":"Contiene una descripción de los diferentes sistemas de referencia de coordenadas (CRS, Coordinate Reference Systems, por sus siglas en inglés) que pueden ser utilizados en el territorio Peninsular. se pueden incluir nuevos registros este diccionario. Consta de los siguientes campos (Figura 3.2).: id_crs: identificador único para el sistema de referencia de coordenadas. crs_code: En esta columna se muestra el código o número asociado al sistema de referencia de coordenadas. Estos códigos son comunes en el campo de la cartografía, y suelen ser utilizados para identificar de manera única un CRS en particular. crs_name: nombre descriptivo del sistema de referencia de coordenadas. Este nombre proporciona información sobre el tipo o la naturaleza del CRS y, menudo, incluye detalles sobre la proyección o el elipsoide utilizado en el sistema. crs_url: url o enlace que puede llevar más información detallada sobre el sistema de referencia de coordenadas. Para cada crs se proporciona el código EPSG (European Petroleum Survey Group) como parte de la URL, lo que facilita la búsqueda de información adicional en bases de datos de referencia geoespacial. Figure 3.2: Diccionario de taxones","code":""},{"path":"https://ajpelu.github.io/famexploreR/articles/estadillos.html","id":"entrada-de-datos-generales","dir":"Articles","previous_headings":"3 Estructura del formulario de campo","what":"Entrada de datos generales","title":"Estadillos de campo","text":"Se trata de la primera entrada de datos del formulario de campo (Figura 3.3). En ella se introducen datos generales sobre el sitio, la población, el tratamiento, etc. En la siguiente tabla se describen cada uno de los campos, su tipología y los valores que aceptan. Descripción de los campos de la hoja de entrada de Datos Generales Figure 3.3: Vista de la hoja de entrada de datos generales","code":""},{"path":"https://ajpelu.github.io/famexploreR/articles/estadillos.html","id":"entrada-de-datos-de-suelo","dir":"Articles","previous_headings":"3 Estructura del formulario de campo","what":"Entrada de datos de suelo","title":"Estadillos de campo","text":"Hoja del formulario para introducir datos de parámetros físico-químicos del suelo (Figura 3.4). En cada fila se introducirán los datos de una muestra de suelo. Los primeros campos, sombreados en gris, se rellenan automáticamente al incluir una nueva fila de datos. Estos campos proceden de los datos introducidos en la primera hoja de datos. Así que cualquier cambio en la primera hoja de datos afecta al resto de las hojas del formulario. Actualmente ésta hoja de datos contiene unos determinados parámetros (pH, % limo, Materia Orgánica, Conductividad Eléctrica, etc), pero se pueden incluir más futuro. Figure 3.4: Vista de la hoja de entrada de datos de suelo","code":""},{"path":"https://ajpelu.github.io/famexploreR/articles/estadillos.html","id":"entrada-de-datos-de-humedad-y-temperatura-del-suelo","dir":"Articles","previous_headings":"3 Estructura del formulario de campo","what":"Entrada de datos de humedad y temperatura del suelo","title":"Estadillos de campo","text":"Hoja del formulario para introducir datos de parámetros de temperatura y humedad del suelo (Figura 3.5). En cada fila se introducirán los datos de humedad y temperatura de cada punto del suelo. Los primeros campos, sombreados en gris, se rellenan automáticamente al incluir una nueva fila de datos. Estos campos proceden de los datos introducidos en la primera hoja de datos. Figure 3.5: Vista de la hoja de entrada de datos de temperatura y humedad del suelo","code":""},{"path":"https://ajpelu.github.io/famexploreR/articles/estadillos.html","id":"entrada-de-datos-de-excrementos","dir":"Articles","previous_headings":"3 Estructura del formulario de campo","what":"Entrada de datos de excrementos","title":"Estadillos de campo","text":"Hoja del formulario para introducir datos de los excrementos (Figura 3.6). Solamente se pueden introducir datos en dos campos: superficie_m2: la superficie en la que se han contabilizado los excrementos excrementos_n: número de excrementos o grupos de excrementos contabilizados. El campo excrementos_m2 se calcula automáticamente. Los primeros campos, sombreados en gris, se rellenan automáticamente. Estos campos proceden de los datos introducidos en la primera hoja de datos. Figure 3.6: Vista de la hoja de entrada de datos de temperatura y humedad del suelo","code":""},{"path":"https://ajpelu.github.io/famexploreR/articles/estadillos.html","id":"entrada-de-datos-de-la-especie-focal","dir":"Articles","previous_headings":"3 Estructura del formulario de campo","what":"Entrada de datos de la especie focal","title":"Estadillos de campo","text":"Hoja del formulario para introducir diferentes datos biométricos, de floración, etc de la especie focal (Figura 3.7). Esta hoja contendrá un máximo de 30 filas (aunque en algunos casos en los que existan menos individuos se rellenarán menos filas). Para cada uno de los individuos de la especie focal se toman diferentes parámetros: n_flores: número de flores. n_frutos: número de frutos. altura_cm: altura en cm. dmayor_cm: diámetro mayor en cm. dmenor_cm: diámetro menor en cm. Asimismo, para cada individuo se indica la especie vecina más próxima (especie_vecina) y indica la distancia en cm la que se encuentra (dist_vecina_cm). Para cada fila (cada individuo de la especie focal), la especie vecina se elige de una lista controlada que viene del diccionario de taxones. Los primeros campos, sombreados en gris, se rellenan automáticamente. Estos campos proceden de los datos introducidos en la primera hoja de datos. Figure 3.7: Vista de la hoja de entrada de datos de la especie focal","code":""},{"path":"https://ajpelu.github.io/famexploreR/articles/estadillos.html","id":"entrada-de-datos-de-herbivoría","dir":"Articles","previous_headings":"3 Estructura del formulario de campo","what":"Entrada de datos de herbivoría","title":"Estadillos de campo","text":"Hoja del formulario para introducir datos de daños por herbivoría en la especie focal (Figura 3.8). Para cada individuo de la especie focal (id_individuo) se eligen cinco hojas (hoja) y se indica el porcentaje de daño por herbivoría (pct_comido) utilizando una escala. Esta hoja contendrá como máximo de 50 filas (5 hojas por 10 individuos), aunque en algunos casos en los que existan menos individuos se rellenarán menos filas. Los primeros campos, sombreados en gris, se rellenan automáticamente. Estos campos proceden de los datos introducidos en la primera hoja de datos. Figure 3.8: Vista de la hoja de entrada de datos de herbivoría de la especie focal","code":""},{"path":"https://ajpelu.github.io/famexploreR/articles/estadillos.html","id":"entrada-de-datos-de-vecindad","dir":"Articles","previous_headings":"3 Estructura del formulario de campo","what":"Entrada de datos de vecindad","title":"Estadillos de campo","text":"Hoja del formulario para introducir datos de composición de especies en torno la especie focal (Figura 3.9). Se eligen 30 individuos de la especie focal, y en torno ellos se muestrea un plot de un diámetro determinado (diam_muestreo_vecindad_cm). Este dato ya se introdujo en la hoja de datos generales y es necesario rellenarlo. En cada plot se anota el individuo de la especie focal (columna individuo), y dentro de ese plot se indican las especies vecinas (especie_vecina) y su número (n_vecino). Las especies vecinas se eligen de una lista controlada que viene del diccionario de taxones. Los primeros campos, sombreados en gris, se rellenan automáticamente. Estos campos proceden de los datos introducidos en la primera hoja de datos. Figure 3.9: Vista de la hoja de entrada de datos de vecindad de la especie focal","code":""},{"path":"https://ajpelu.github.io/famexploreR/articles/estadillos.html","id":"entrada-de-datos-de-composición-de-la-comunidad-vegetal-método-de-cobertura-com_veg_cobertura","dir":"Articles","previous_headings":"3 Estructura del formulario de campo","what":"Entrada de datos de composición de la comunidad vegetal: método de cobertura (com_veg_cobertura)","title":"Estadillos de campo","text":"Hoja del formulario para introducir datos de la composición de la comunidad (Figura 3.10). Esta hoja solamente se rellenará en caso de haber seleccionado en la hoja general de datos el método cobertura dentro de la fila comunidad_vegetal. Si se rellena esta hoja hay que rellenar la hoja com_veg_contactos. Figure 3.10: Vista de la hoja de entrada de datos de la comunidad comunidad vegetal por el método de cobertura Se rellenarán tantas filas como especies se identifique dentro del polígono de muestreo. Las dimensiones del polígono de muestreo (columna dimensiones_m2) se han incluido en la pestaña inicial de datos, y es necesario rellenarla aquí.  Las especies identificadas se eligen de una lista controlada que viene del diccionario de taxones. Para cada especie se indica el porcentaje de cobertura.  Asimismo en la última columna se indica el % de cobertura general de la parcela. Solamente se indica en la primera fila, el resto de filas se rellenan automáticamente. Los primeros campos, sombreados en gris, se rellenan automáticamente. Estos campos proceden de los datos introducidos en la primera hoja de datos.","code":""},{"path":"https://ajpelu.github.io/famexploreR/articles/estadillos.html","id":"entrada-de-datos-de-composición-de-la-comunidad-vegetal-método-de-contactos-com_veg_contactos","dir":"Articles","previous_headings":"3 Estructura del formulario de campo","what":"Entrada de datos de composición de la comunidad vegetal: método de contactos (com_veg_contactos)","title":"Estadillos de campo","text":"Hoja del formulario para introducir datos de la composición de la comunidad (Figura 3.11). Esta hoja solamente se rellenará en caso de haber seleccionado en la hoja general de datos el método contacto dentro de la fila comunidad_vegetal. Si se rellena esta hoja hay que rellenar la hoja com_veg_cobertura. Figure 3.11: Vista de la hoja de entrada de datos de la comunidad comunidad vegetal por el método de contactos Se rellenarán tantas filas como especies se identifique dentro del polígono de muestreo. La longitud del transecto (columna longitud_transecto_m), la separación entre segmentos (columna separación_segmento_m) y el número de puntos por segmento (columna puntos_por_segmento) se han incluido en la pestaña inicial de datos, y es necesario rellenarlos aquí.  Las especies identificadas se eligen de una lista controlada que viene del diccionario de taxones. Para cada especie se indica el número de contactos totales (n_contactos) y con ello se calcula la cobertura de cada especie. Los primeros campos, sombreados en gris, se rellenan automáticamente. Estos campos proceden de los datos introducidos en la primera hoja de datos.","code":""},{"path":"https://ajpelu.github.io/famexploreR/authors.html","id":null,"dir":"","previous_headings":"","what":"Autores","title":"Autores y Citas","text":"Antonio Jesús Pérez-Luque. Mantenedor-, autor-. Juan Lorite. Colaborador-.","code":""},{"path":"https://ajpelu.github.io/famexploreR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Cita","title":"Autores y Citas","text":"Pérez-Luque (2024). famexploreR: Exploration Threathened Flora field data. R package version 0.0.0.9000, https://ajpelu.github.io/famexploreR/.","code":"@Manual{,   title = {famexploreR: Exploration of Threathened Flora field data},   author = {Antonio Jesús Pérez-Luque},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://ajpelu.github.io/famexploreR/}, }"},{"path":"https://ajpelu.github.io/famexploreR/index.html","id":"famexplorer","dir":"","previous_headings":"","what":"Exploration of Threathened Flora field data","title":"Exploration of Threathened Flora field data","text":"El objetivo de famexploreR es poder importar datos de estadillos de campo de seguimiento de Flora Amenezada y realizar sobre ellos diferentes cálculos y gráficos para generar informes.","code":""},{"path":"https://ajpelu.github.io/famexploreR/index.html","id":"instalación","dir":"","previous_headings":"","what":"Instalación","title":"Exploration of Threathened Flora field data","text":"Puedes instalar la versión de desarrollo de famexploreR desde GitHub con el siguiente código: famexploreR fue construido en R, un lenguaje de programación de código abierto, utilizando el paquete Shiny, un marco de aplicación web para R. Puedes descargar la versión de desarrollo de famexploreR desde GitHub.","code":"# install.packages(\"devtools\") devtools::install_github(\"ajpelu/famexploreR\")"},{"path":"https://ajpelu.github.io/famexploreR/index.html","id":"cómo-ejecutar-famexplorer","dir":"","previous_headings":"","what":"Cómo ejecutar famexploreR","title":"Exploration of Threathened Flora field data","text":"La opción recomendada para utilizar la aplicación es descargar el paquete y ejecutarlo localmente.","code":""},{"path":"https://ajpelu.github.io/famexploreR/index.html","id":"localmente","dir":"","previous_headings":"Cómo ejecutar famexploreR","what":"Localmente","title":"Exploration of Threathened Flora field data","text":"Se recomienda el uso de Rstudio. Descarga e instala el paquete famexploreR usando: Ejecuta la aplicación:","code":"# install.packages(\"devtools\") devtools::install_github(\"ajpelu/famexploreR\") library(\"famexploreR\") launch_famexplorer()"},{"path":"https://ajpelu.github.io/famexploreR/index.html","id":"live","dir":"","previous_headings":"Cómo ejecutar famexploreR","what":"Live","title":"Exploration of Threathened Flora field data","text":"También se puede instalar el paquete en un servidor que contenga R-studio y shiny. De forma provisional se muestra un ejemplo aquí Todo el código necesario se encuentra en este repositorio","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/biometryPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Biometry Plot — biometryPlot","title":"Create Biometry Plot — biometryPlot","text":"function generates biometry plot based provided data frame. visualizes measurements height, major diameter, minor diameter specific species.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/biometryPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Uso","title":"Create Biometry Plot — biometryPlot","text":"","code":"biometryPlot(x, base_size, axis_text_size = 24, ...)"},{"path":"https://ajpelu.github.io/famexploreR/reference/biometryPlot.html","id":"argumentos","dir":"Reference","previous_headings":"","what":"Argumentos","title":"Create Biometry Plot — biometryPlot","text":"x data frame containing biometric measurements species. base_size base_size plot axis_text_size size axis text ... others ggplot parameters","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/biometryPlot.html","id":"valor","dir":"Reference","previous_headings":"","what":"Valor","title":"Create Biometry Plot — biometryPlot","text":"biometry plot visualizing height, major diameter, minor diameter.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/biometryPlot.html","id":"detalles","dir":"Reference","previous_headings":"","what":"Detalles","title":"Create Biometry Plot — biometryPlot","text":"function takes data frame x containing following columns: especie_code: species code. id_individuo: individual identifier. altura_cm: Height centimeters. dmayor_cm: Major diameter centimeters. dmenor_cm: Minor diameter centimeters. function creates boxplot measurement type uses custom colors. also includes half-eye plots half-point plots.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/biometryStat.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Biometry Statistics — biometryStat","title":"Calculate Biometry Statistics — biometryStat","text":"function calculates various statistics (mean, standard deviation, standard error, minimum, maximum) specified biometric variables data frame.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/biometryStat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Uso","title":"Calculate Biometry Statistics — biometryStat","text":"","code":"biometryStat(x, variables = c(\"altura_cm\", \"dmayor_cm\", \"dmenor_cm\"))"},{"path":"https://ajpelu.github.io/famexploreR/reference/biometryStat.html","id":"argumentos","dir":"Reference","previous_headings":"","what":"Argumentos","title":"Calculate Biometry Statistics — biometryStat","text":"x data frame containing biometric data. variables character vector specifying names biometric variables statistics calculated. Default c('altura_cm', 'dmayor_cm', 'dmenor_cm').","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/biometryStat.html","id":"valor","dir":"Reference","previous_headings":"","what":"Valor","title":"Calculate Biometry Statistics — biometryStat","text":"data frame columns statistic (mean, sd, se, min, max) corresponding variable column.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/computeFlowering.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Summary Statistics for Flowering Variables — computeFlowering","title":"Compute Summary Statistics for Flowering Variables — computeFlowering","text":"function computes summary statistics specified flowering variables given data frame.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/computeFlowering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Uso","title":"Compute Summary Statistics for Flowering Variables — computeFlowering","text":"","code":"computeFlowering(x, var_interest)"},{"path":"https://ajpelu.github.io/famexploreR/reference/computeFlowering.html","id":"argumentos","dir":"Reference","previous_headings":"","what":"Argumentos","title":"Compute Summary Statistics for Flowering Variables — computeFlowering","text":"x data frame containing variables interest. var_interest character vector variable names summarized.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/computeFlowering.html","id":"valor","dir":"Reference","previous_headings":"","what":"Valor","title":"Compute Summary Statistics for Flowering Variables — computeFlowering","text":"data frame containing summary statistics specified variables.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/computeFlowering.html","id":"detalles","dir":"Reference","previous_headings":"","what":"Detalles","title":"Compute Summary Statistics for Flowering Variables — computeFlowering","text":"function calculates following summary statistics specified variable: variable: name variable. n_ind: number individuals non-zero values. pct_ind: percentage individuals non-zero values. mean_count: mean value variable individuals non-zero values. sd_count: standard deviation variable individuals non-zero values. se_count: standard error mean variable.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/computeFlowering.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Ejemplos","title":"Compute Summary Statistics for Flowering Variables — computeFlowering","text":"","code":"if (FALSE) { data <- data.frame(   n_flores = c(0, 2, 3, 0, 5),   n_frutos = c(0, 0, 4, 0, 6) ) count_columns <- c(\"n_flores\", \"n_frutos\") result_summary <- computeFlowering(data, count_columns) }"},{"path":"https://ajpelu.github.io/famexploreR/reference/diversityCommunity.html","id":null,"dir":"Reference","previous_headings":"","what":"Diversity Indices for Plant Communities — diversityCommunity","title":"Diversity Indices for Plant Communities — diversityCommunity","text":"function computes diversity indices plant communities based specified method.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/diversityCommunity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Uso","title":"Diversity Indices for Plant Communities — diversityCommunity","text":"","code":"diversityCommunity(x)"},{"path":"https://ajpelu.github.io/famexploreR/reference/diversityCommunity.html","id":"argumentos","dir":"Reference","previous_headings":"","what":"Argumentos","title":"Diversity Indices for Plant Communities — diversityCommunity","text":"x list containing data frames","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/diversityCommunity.html","id":"valor","dir":"Reference","previous_headings":"","what":"Valor","title":"Diversity Indices for Plant Communities — diversityCommunity","text":"data frame diversity indices plant communities.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/diversityCommunity.html","id":"detalles","dir":"Reference","previous_headings":"","what":"Detalles","title":"Diversity Indices for Plant Communities — diversityCommunity","text":"function first extracts method used data collection 'datos_generales' data frame. Based method, selects corresponding plant community data frame calculates various diversity indices.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/famexploreR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"famexploreR: Exploration of Threathened Flora field data — famexploreR-package","title":"famexploreR: Exploration of Threathened Flora field data — famexploreR-package","text":"shiny app explores data Threathened Flora. uses customized forms explore data generate several plots, tables.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/famexploreR-package.html","id":"autor-a","dir":"Reference","previous_headings":"","what":"Autor-a","title":"famexploreR: Exploration of Threathened Flora field data — famexploreR-package","text":"Maintainer: Antonio Jesús Pérez-Luque ajpelu@gmail.com (ORCID) contributors: Juan Lorite lorite@ugr (ORCID) [contributor]","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/herbivory.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Herbivory Metrics and Create a Plot — herbivory","title":"Calculate Herbivory Metrics and Create a Plot — herbivory","text":"function calculates herbivory metrics given dataset creates corresponding ggplot.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/herbivory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Uso","title":"Calculate Herbivory Metrics and Create a Plot — herbivory","text":"","code":"herbivory(   data,   bar_color = \"blue\",   point_fill = \"green\",   point_color = \"black\",   point_alpha = 0.9 )"},{"path":"https://ajpelu.github.io/famexploreR/reference/herbivory.html","id":"argumentos","dir":"Reference","previous_headings":"","what":"Argumentos","title":"Calculate Herbivory Metrics and Create a Plot — herbivory","text":"data data frame containing herbivory data columns including 'comido_pct', 'id_individuo', relevant variables. bar_color color bar ggplot. Default blue. point_fill fill color points ggplot. Default green. point_color outline color points ggplot. Default black. point_alpha alpha (transparency) points ggplot. Default 0.9.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/herbivory.html","id":"valor","dir":"Reference","previous_headings":"","what":"Valor","title":"Calculate Herbivory Metrics and Create a Plot — herbivory","text":"list containing: 'damage': tibble herbivory metrics. 'plot_damage': ggplot object displaying herbivory metrics.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/hojas_validas.html","id":null,"dir":"Reference","previous_headings":"","what":"hojas_validas Dataset — hojas_validas","title":"hojas_validas Dataset — hojas_validas","text":"dataset contains multiple data frames related various aspects study. includes data general information, soil, humidity temperature, excrement observations, focal species, herbivory, neighborhood, vegetation coverage, vegetation contacts, taxonomy, treatment, fencing, state fencing, coordinate reference system information.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/hojas_validas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Uso","title":"hojas_validas Dataset — hojas_validas","text":"","code":"hojas_validas"},{"path":"https://ajpelu.github.io/famexploreR/reference/hojas_validas.html","id":"formato","dir":"Reference","previous_headings":"","what":"Formato","title":"hojas_validas Dataset — hojas_validas","text":"data frame containing names sheets forms","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/launch_famexplorer.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the famexploreR Shiny Application — launch_famexplorer","title":"Run the famexploreR Shiny Application — launch_famexplorer","text":"Launches famexploreR app","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/launch_famexplorer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Uso","title":"Run the famexploreR Shiny Application — launch_famexplorer","text":"","code":"launch_famexplorer()"},{"path":"https://ajpelu.github.io/famexploreR/reference/neighborAbundance_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Neighbor Abundance Statistics — neighborAbundance_stats","title":"Calculate Neighbor Abundance Statistics — neighborAbundance_stats","text":"function calculates various neighbor abundance statistics based input data.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/neighborAbundance_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Uso","title":"Calculate Neighbor Abundance Statistics — neighborAbundance_stats","text":"","code":"neighborAbundance_stats(data, units = c(\"m2\", \"dm2\", \"cm2\"), focal_sp)"},{"path":"https://ajpelu.github.io/famexploreR/reference/neighborAbundance_stats.html","id":"argumentos","dir":"Reference","previous_headings":"","what":"Argumentos","title":"Calculate Neighbor Abundance Statistics — neighborAbundance_stats","text":"data data frame containing relevant columns, including \"individuo\" (individual ID), \"diam_muestreo_vecindad_cm\" (neighborhood sampling diameter centimeters), \"especie_vecina\" (neighboring species), \"n_vecino\" (number neighbors). units character vector specifying units area calculation. Options \"m2\" (square meters), \"dm2\" (square decimeters), \"cm2\" (square centimeters). focal_sp character string specifying focal species.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/neighborAbundance_stats.html","id":"valor","dir":"Reference","previous_headings":"","what":"Valor","title":"Calculate Neighbor Abundance Statistics — neighborAbundance_stats","text":"list containing two data frames: output data frame individual-level neighbor abundance statistics. output_summary data frame summarized neighbor abundance statistics.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/neighborSpecies_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizes neighbor species data — neighborSpecies_stats","title":"Summarizes neighbor species data — neighborSpecies_stats","text":"function takes data frame tibble groups neighbor species (especie_vecina). neighbor species, function calculates number plots species recorded, well several statistics neighbor species: mean, standard error, minimum, maximum abundance neighbor species plots present.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/neighborSpecies_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Uso","title":"Summarizes neighbor species data — neighborSpecies_stats","text":"","code":"neighborSpecies_stats(data)"},{"path":"https://ajpelu.github.io/famexploreR/reference/neighborSpecies_stats.html","id":"argumentos","dir":"Reference","previous_headings":"","what":"Argumentos","title":"Summarizes neighbor species data — neighborSpecies_stats","text":"data data frame tibble containing data summarized.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/neighborSpecies_stats.html","id":"valor","dir":"Reference","previous_headings":"","what":"Valor","title":"Summarizes neighbor species data — neighborSpecies_stats","text":"tibble following columns: especie_vecina: grouping variable (neighbor species). ab_mean: mean abundance neighbor species. ab_se: standard error mean abundance. ab_min: minimum abundance neighbor species. ab_max: maximum abundance neighbor species. present_at: count plots neighbor species recorded. present_at_per: percentage sampled plots (individuo) neighbor species recorded.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/plotCommunity.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Plant Community Data — plotCommunity","title":"Plot Plant Community Data — plotCommunity","text":"function generates bar plot visualize plant community data based specified method.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/plotCommunity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Uso","title":"Plot Plant Community Data — plotCommunity","text":"","code":"plotCommunity(x, axis_text_size = 16, axis_title_size = 17, ...)"},{"path":"https://ajpelu.github.io/famexploreR/reference/plotCommunity.html","id":"argumentos","dir":"Reference","previous_headings":"","what":"Argumentos","title":"Plot Plant Community Data — plotCommunity","text":"x list containing data frames different aspects study. axis_text_size size axis text. Default value=16 axis_title_size size axis title. Default value=17 ... others ggplot parameters","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/plotCommunity.html","id":"valor","dir":"Reference","previous_headings":"","what":"Valor","title":"Plot Plant Community Data — plotCommunity","text":"bar plot visualizing plant community data.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/plotCommunity.html","id":"detalles","dir":"Reference","previous_headings":"","what":"Detalles","title":"Plot Plant Community Data — plotCommunity","text":"function first extracts method used data collection 'datos_generales' data frame. Based method, selects corresponding plant community data frame creates bar plot visualize coverage plant species.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/plotFlowering.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a bar plot with error bars for flowering/fructification data. — plotFlowering","title":"Create a bar plot with error bars for flowering/fructification data. — plotFlowering","text":"function generates bar plot error bars flowering data, allowing specify whether use standard error (\"se\") standard deviation (\"sd\") error bars.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/plotFlowering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Uso","title":"Create a bar plot with error bars for flowering/fructification data. — plotFlowering","text":"","code":"plotFlowering(x, error = \"se\", bar_color = \"blue\", ...)"},{"path":"https://ajpelu.github.io/famexploreR/reference/plotFlowering.html","id":"argumentos","dir":"Reference","previous_headings":"","what":"Argumentos","title":"Create a bar plot with error bars for flowering/fructification data. — plotFlowering","text":"x data frame containing flowering data. error type error bars use. \"se\" (standard error) \"sd\" (standard deviation). Default \"se\". bar_color color bars plot. Default \"blue\". ... others ggplot parameters","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/plotFlowering.html","id":"valor","dir":"Reference","previous_headings":"","what":"Valor","title":"Create a bar plot with error bars for flowering/fructification data. — plotFlowering","text":"ggplot2 object representing bar plot error bars.","code":""},{"path":[]},{"path":"https://ajpelu.github.io/famexploreR/reference/prepareGeo.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Geo Spatial Data — prepareGeo","title":"Prepare Geo Spatial Data — prepareGeo","text":"function takes data frame containing information geographic coordinates prepares spatial analysis converting Simple Features (sf) object.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/prepareGeo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Uso","title":"Prepare Geo Spatial Data — prepareGeo","text":"","code":"prepareGeo(x)"},{"path":"https://ajpelu.github.io/famexploreR/reference/prepareGeo.html","id":"argumentos","dir":"Reference","previous_headings":"","what":"Argumentos","title":"Prepare Geo Spatial Data — prepareGeo","text":"x data frame containing least columns 'campo' 'valor', 'campo' specifies type information (e.g., 'crs', 'coord_x', 'coord_y', 'elevacion'), 'valor' contains corresponding values.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/prepareGeo.html","id":"valor","dir":"Reference","previous_headings":"","what":"Valor","title":"Prepare Geo Spatial Data — prepareGeo","text":"Simple Features (sf) object spatial coordinates attributes.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/prepareGeo.html","id":"detalles","dir":"Reference","previous_headings":"","what":"Detalles","title":"Prepare Geo Spatial Data — prepareGeo","text":"function creates sf object spatial coordinates attributes, input data frame thata contain specific columns 'campo' 'valor'.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/preparePopup.html","id":null,"dir":"Reference","previous_headings":"","what":"preparaPopup function — preparePopup","title":"preparaPopup function — preparePopup","text":"function takes tibble x vector field names mdfields input prepares HTML popup content based specified fields.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/preparePopup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Uso","title":"preparaPopup function — preparePopup","text":"","code":"preparePopup(   x,   mdfields = c(\"especie focal\", \"localidad\", \"site\", \"reference\", \"poblacion\",     \"tratamiento\", \"elevacion\", \"fecha\") )"},{"path":"https://ajpelu.github.io/famexploreR/reference/preparePopup.html","id":"argumentos","dir":"Reference","previous_headings":"","what":"Argumentos","title":"preparaPopup function — preparePopup","text":"x tibble containing data columns 'campo' 'valor'. mdfields vector field names specifying fields include popup content.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/preparePopup.html","id":"valor","dir":"Reference","previous_headings":"","what":"Valor","title":"preparaPopup function — preparePopup","text":"character string containing HTML-formatted popup content.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/readAllsheets.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data from all sheets of an uploaded file. — readAllsheets","title":"Read data from all sheets of an uploaded file. — readAllsheets","text":"function reads data sheets uploaded file ODS XLSX format returns named list.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/readAllsheets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Uso","title":"Read data from all sheets of an uploaded file. — readAllsheets","text":"","code":"readAllsheets(upload_path, valid_sheets)"},{"path":"https://ajpelu.github.io/famexploreR/reference/readAllsheets.html","id":"argumentos","dir":"Reference","previous_headings":"","what":"Argumentos","title":"Read data from all sheets of an uploaded file. — readAllsheets","text":"upload_path Character string specifying path uploaded file. valid_sheets Character vector specifying names sheets expected uploaded file.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/readAllsheets.html","id":"valor","dir":"Reference","previous_headings":"","what":"Valor","title":"Read data from all sheets of an uploaded file. — readAllsheets","text":"named list containing data sheets uploaded file, sheet names list names.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/summarizeSoil.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize Soil Data — summarizeSoil","title":"Summarize Soil Data — summarizeSoil","text":"function takes tibble containing soil data, performs data summarization, returns formatted summarized tibble.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/summarizeSoil.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Uso","title":"Summarize Soil Data — summarizeSoil","text":"","code":"summarizeSoil(x)"},{"path":"https://ajpelu.github.io/famexploreR/reference/summarizeSoil.html","id":"argumentos","dir":"Reference","previous_headings":"","what":"Argumentos","title":"Summarize Soil Data — summarizeSoil","text":"x tibble containing soil data.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/summarizeSoil.html","id":"valor","dir":"Reference","previous_headings":"","what":"Valor","title":"Summarize Soil Data — summarizeSoil","text":"tibble summarized soil data.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/summarizeSoil.html","id":"detalles","dir":"Reference","previous_headings":"","what":"Detalles","title":"Summarize Soil Data — summarizeSoil","text":"function performs following steps: Removes rows missing values. Excludes certain columns analysis. Calculates mean, standard deviation, standard error numeric columns. Pivots data long format. Renames columns clarity. Pivots data back wider format. Rounds numeric columns three decimal places.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/ternaryPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Ternary Plot with Customizable Axis Labels — ternaryPlot","title":"Generate a Ternary Plot with Customizable Axis Labels — ternaryPlot","text":"function generates ternary plot using ggtern package customizable axis labels. function allows specifying variable names x, y, z axes. also capitalizes first letter variable name axis labels.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/ternaryPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Uso","title":"Generate a Ternary Plot with Customizable Axis Labels — ternaryPlot","text":"","code":"ternaryPlot(data, xvar, yvar, zvar, bsize, point_size, ...)"},{"path":"https://ajpelu.github.io/famexploreR/reference/ternaryPlot.html","id":"argumentos","dir":"Reference","previous_headings":"","what":"Argumentos","title":"Generate a Ternary Plot with Customizable Axis Labels — ternaryPlot","text":"data data frame containing data plotted. xvar name variable plotted x-axis ternary plot. yvar name variable plotted y-axis ternary plot. zvar name variable plotted z-axis ternary plot. bsize base font size plot. point_size size points. ... others ggplot parameters","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/ternaryPlot.html","id":"valor","dir":"Reference","previous_headings":"","what":"Valor","title":"Generate a Ternary Plot with Customizable Axis Labels — ternaryPlot","text":"ggtern plot object displaying ternary plot.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/ternaryPlot.html","id":"detalles","dir":"Reference","previous_headings":"","what":"Detalles","title":"Generate a Ternary Plot with Customizable Axis Labels — ternaryPlot","text":"function creates ternary plot, data points represented points triangular coordinate system. xvar, yvar, zvar arguments allow specify variables data argument used axis. function also capitalizes first letter variable name use axis labels. can adjust base font size (bsize) plot control text size.","code":""},{"path":[]},{"path":"https://ajpelu.github.io/famexploreR/reference/ternaryPlot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Ejemplos","title":"Generate a Ternary Plot with Customizable Axis Labels — ternaryPlot","text":"","code":"if (FALSE) { # Example usage of the custom function with customized variable names data <- data.frame(   arena = c(0.4, 0.3, 0.2, 0.1),   arcilla = c(0.3, 0.4, 0.2, 0.1),   limo = c(0.3, 0.3, 0.4, 0.1) )  generateTernaryPlot(data, xvar = 'arena', yvar = 'arcilla',  zvar = 'limo') }"},{"path":"https://ajpelu.github.io/famexploreR/reference/vecindadPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Vecindad Plot — vecindadPlot","title":"Generate Vecindad Plot — vecindadPlot","text":"function generates bar plot error bars visualizes abundance neighboring species.","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/vecindadPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Uso","title":"Generate Vecindad Plot — vecindadPlot","text":"","code":"vecindadPlot(x, axis_text_size = 16, axis_title_size = 17, ...)"},{"path":"https://ajpelu.github.io/famexploreR/reference/vecindadPlot.html","id":"argumentos","dir":"Reference","previous_headings":"","what":"Argumentos","title":"Generate Vecindad Plot — vecindadPlot","text":"x data frame containing data plotting. especie_vecina: neighboring species. ab_mean: mean abundance neighboring species. ab_se: standard error mean abundance. axis_text_size size axis text. Default value=16 axis_title_size size axis title. Default value=17 ... others ggplot parameters","code":""},{"path":"https://ajpelu.github.io/famexploreR/reference/vecindadPlot.html","id":"valor","dir":"Reference","previous_headings":"","what":"Valor","title":"Generate Vecindad Plot — vecindadPlot","text":"bar plot error bars.","code":""}]
